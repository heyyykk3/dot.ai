rules_version = '2';
service cloud.firestore {
 match /databases/{database}/documents {
   // Helper function to check if user is authenticated
   function isAuthenticated() {
     return request.auth != null;
   }
   
   // Helper function to check if user owns the document
   function isOwner(userId) {
     return isAuthenticated() && request.auth.uid == userId;
   }
   
   // Chats collection
   match /chats/{chatId} {
     // Allow read/write only if the user owns the chat
     allow read, write: if isOwner(resource.data.userId);
     
     // Allow create with proper validation
     allow create: if isAuthenticated() && 
                    request.resource.data.userId == request.auth.uid &&
                    request.resource.data.chatId == chatId;
   }
   
   // Messages collection
   match /messages/{messageId} {
     // Allow read if user owns the message (via userId field)
     allow read: if isOwner(resource.data.userId);
     
     // Allow create with proper validation
     allow create: if isAuthenticated() && 
                    request.resource.data.userId == request.auth.uid;
     
     // Allow update/delete only if user owns the message
     allow update, delete: if isOwner(resource.data.userId);
   }
   
   // User preferences and settings
   match /userPreferences/{userId} {
     allow read, write: if isOwner(userId);
   }
   
   match /userSettings/{userId} {
     allow read, write: if isOwner(userId);
   }
   
   // Usage tracking
   match /usage/{userId} {
     allow read, write: if isOwner(userId);
   }
   
   // Permission test collection (for debugging)
   match /permissionTests/{docId} {
     allow read, write, delete: if isAuthenticated() && 
                                  request.resource.data.userId == request.auth.uid;
   }
 }
}
